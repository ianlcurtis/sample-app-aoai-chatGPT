{
  "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
  "contentVersion": "1.0.0.0",
  "parameters": {
    "searchServiceName": {
      "type": "string"
    },
    "location": {
      "type": "string",
      "defaultValue": "[resourceGroup().location]"
    },
    "sku": {
      "type": "string",
      "defaultValue": "standard"
    },
    "searchApiKey": {
      "type": "securestring"
    },
    "storageConnectionString": {
      "type": "securestring"
    },
    "blobContainerName": {
      "type": "string"
    }
  },
  "resources": [
    {
      "type": "Microsoft.Search/searchServices",
      "apiVersion": "2020-08-01",
      "name": "[parameters('searchServiceName')]",
      "location": "[parameters('location')]",
      "sku": {
        "name": "[parameters('sku')]"
      },
      "properties": {
        "replicaCount": 1,
        "partitionCount": 1,
        "hostingMode": "default"
      }
    },
    {
      "type": "Microsoft.Resources/deploymentScripts",
      "apiVersion": "2020-10-01",
      "name": "CreateSearchIndexResources",
      "location": "[parameters('location')]",
      "dependsOn": [
        "[resourceId('Microsoft.Search/searchServices', parameters('searchServiceName'))]"
      ],
      "kind": "AzurePowerShell",
      "properties": {
        "azPowerShellVersion": "10.4",
        "timeout": "PT10M",
        "arguments": "",
        "scriptContent": "[concat('
          $searchName = \"', parameters('searchServiceName'), '\"
          $apiKey = \"', parameters('searchApiKey'), '\"
          $storageConnectionString = \"', parameters('storageConnectionString'), '\"
          $containerName = \"', parameters('blobContainerName'), '\"
          $url = \"https://$searchName.search.windows.net\"

          $headers = @{
            \"Content-Type\" = \"application/json\"
            \"api-key\" = $apiKey
          }

          # Data Source
          $dataSource = @{
            name = \"blob-ds\"
            description = \"Blob Data Source\"
            type = \"azureblob\"
            credentials = @{ connectionString = $storageConnectionString }
            container = @{ name = $containerName }
          } | ConvertTo-Json -Depth 10

          Invoke-RestMethod -Uri \"$url/datasources?api-version=2020-06-30\" -Method Put -Headers $headers -Body $dataSource

          # Index
          $index = @{
            name = \"my-index\"
            fields = @(
              @{ name=\"id\"; type=\"Edm.String\"; key=$true },
              @{ name=\"content\"; type=\"Edm.String\" },
              @{ name=\"metadata_storage_name\"; type=\"Edm.String\" },
              @{ name=\"metadata_storage_path\"; type=\"Edm.String\" },
              @{ name=\"metadata_storage_last_modified\"; type=\"Edm.DateTimeOffset\" }
            )
          } | ConvertTo-Json -Depth 10

          Invoke-RestMethod -Uri \"$url/indexes/my-index?api-version=2020-06-30\" -Method Put -Headers $headers -Body $index

          # Indexer
          $indexer = @{
            name = \"my-indexer\"
            dataSourceName = \"blob-ds\"
            targetIndexName = \"my-index\"
            schedule = @{
              interval = \"PT1H\"
            }
            fieldMappings = @(
              @{ sourceFieldName = \"metadata_storage_path\"; targetFieldName = \"id\" },
              @{ sourceFieldName = \"content\"; targetFieldName = \"content\" }
            )
          } | ConvertTo-Json -Depth 10

          Invoke-RestMethod -Uri \"$url/indexers/my-indexer?api-version=2020-06-30\" -Method Put -Headers $headers -Body $indexer
        ')]",
        "cleanupPreference": "OnSuccess",
        "forceUpdateTag": "[newGuid()]",
        "identity": {
          "type": "UserAssigned"
        }
      }
    }
  ]
}